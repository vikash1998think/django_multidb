version: '3'

volumes:
  multiconfiguration_django_local_postgres_data: {}
  multiconfiguration_django_local_postgres_data_backups: {}

services:

  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: multiconfiguration_django_local_django
    container_name: multiconfiguration_django_local_django
    depends_on:
      - postgres
      - mongodb
      - redis
      - mailhog
      - elasticsearch_db
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: multiconfiguration_django_production_postgres
    container_name: multiconfiguration_django_local_postgres
    # volumes:
    #   - multiconfiguration_django_local_postgres_data:/var/lib/postgresql/data
    #   - multiconfiguration_django_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - 5432:5432

  mongodb:
    build:
      context: .
      dockerfile: ./compose/production/mongodb/Dockerfile
    image: multiconfiguration_django_production_mongodb
    container_name: multiconfiguration_django_local_mongodb
    # volumes:
    #   - multiconfiguration_django_local_mongodb_data:/var/lib/mongodbql/data
    #   - multiconfiguration_django_local_mongodb_data_backups:/backups
    env_file:
      - ./.envs/.local/.mongodb
    ports:
      - 27017:27017

  elasticsearch_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
      - 9300:9300

  docs:
    image: multiconfiguration_django_local_docs
    container_name: multiconfiguration_django_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./multiconfiguration_django:/app/multiconfiguration_django:z
    ports:
      - "9000:9000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: multiconfiguration_django_local_mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:6
    container_name: multiconfiguration_django_local_redis

  celeryworker:
    <<: *django
    image: multiconfiguration_django_local_celeryworker
    container_name: multiconfiguration_django_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: multiconfiguration_django_local_celerybeat
    container_name: multiconfiguration_django_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: multiconfiguration_django_local_flower
    container_name: multiconfiguration_django_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
